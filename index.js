//? JS'de stringler nasƒ±l olusturulur ve yazdƒ±rƒ±lƒ±r?

const str1 = "new string"
console.log(str1);
const str2 = 'new string'
console.log(str2);
const str3 = `new string`//template literal
console.log(str3);
const str4 = new String("new string")
console.log(str4);

const str5 = "45"

console.log(str5);


const str6 = "‚ù§Ô∏è"

console.log(str6);

//? String metodu ile c√ºmle olu≈ütur

let c√ºmle = "√ñmer\"in kalemini unutma."
console.log(c√ºmle);

//? Paragraf olu≈ütur
const paragraf = "\tMerhaba Cohort 15 akinleri,\nG√ºn√ºn√ºn√ºz g√ºzel ge√ßsin.\nCalismalarinizda kolayliklar dilerim."
console.log(paragraf);

//? String yapisi ve indexleme

let course = "Clarusway"

console.log(course[0]);
console.log(course[4]);
console.log(course[7]);
console.log(course[-1]);
//? course stringinde 6. elamanƒ±n yerine v karakterini yazƒ±n.

course[6] = "v"
console.log(course[6]); // Stringler, primitive olduƒüu i√ßin par√ßa olarak deƒüi≈ütirilemezler.

//? course="Full Stack" ≈üeklinde degistir.

course = "Full Stack"
console.log(course);

//!                        STRING METHODS AND PROPERTIES                      */

//!                        STRING METHODS AND PROPERTIES                      */

//? lenght property ne demektir.
// bir kelimenin harflerini tek tek yazdƒ±ran kod blouƒüudur.

console.log(course.length);

for (let i = 0; i <= course.length - 1; i++) {
    console.log(course[i]);
}

//? emoji karakterlerinin length'i
const emoji = "üòò"
console.log(emoji);

//!                               STRING Bƒ∞RLE≈ûTƒ∞RME                       */
//!                               + , concat , temlate literal             */

const metin1 = "Hello!"
const metin2 = " Clarusway."
const metin3 = " G√ºn√ºn√ºz g√ºzel ge√ßsin."
console.log(metin1 + "" + metin2 + "" + metin3);

//? concat

let yeniMetin = metin1.concat(metin2).concat(metin3)
console.log(metin1);
console.log(metin2);
console.log(metin3);
console.log(yeniMetin);

/*                              Template Literal                              */
/* ECMAScript 6 (ES6) ile gelen template literals, stringleri daha okunaklƒ± bir ≈üekilde birle≈ütirmenize olanak tanƒ±r. */

const ad = "Sema"
const soyad = "G√ºven"
// backtikler kullanƒ±lƒ±r
//  deƒüi≈ükenleri ${ } i√ßine alƒ±yoruz
const fullName = `${ad} ${soyad} nasilsiniz?
Bug√ºn Js dersinin Stringler konusundasiniz. Pre classlari bitirdiginizi umuyoruz.
`
console.log(fullName);

//?                                toUpperCase()                              */  Karakterleri b√ºy√ºk harfe d√∂n√º≈üt√ºrme -immutable(kalƒ±cƒ± deƒüi≈üiklik yapmaz)

const sentences = "G√ºzel bir g√ºn"
const newSentences = sentences.toUpperCase()
console.log(newSentences);
console.log(sentences);

//?                                toLowerCase()                              */
//? Karakterleri k√º√ß√ºk harfe d√∂n√º≈üt√ºrme - immutable ( kalƒ±cƒ± deƒüi≈üiklik yapmaz)

const littleLetSentences = sentences.toLocaleLowerCase()
console.log(littleLetSentences);

// kullanƒ±cƒ±dan aldƒ±ƒüƒ±  ad bilgisini HO≈ûGELDƒ∞N SEMA olarak g√∂r√ºnt√ºleyen kod bloƒüu

// let name = prompt("Adinizi Girin:")
// console.log(`HO≈ûGELDƒ∞N ${name.toUpperCase()}`);

/*                   split ()
                 split par√ßaladƒ±ƒüƒ± b√∂l√ºmleri diziye √ßevirir.                 */

//str.split(separator)
//? C√ºmleleri sperat√∂re (ayƒ±rƒ±cƒ±) g√∂re par√ßalama - immutable - kalƒ±cƒ± deƒüi≈üiklik yapmaz.

let metin4 = "Clarusway IT Bootcamp"
let splittedMetin4 = metin4.split("")
console.log(splittedMetin4);
console.log(metin4);

for (let i = 0; i < splittedMetin4.length; i++) {
    if (splittedMetin4[i] === "Clarusway") {
        console.log(`Clarusway kelimesi bu c√ºmlenin ${i + 1}. elemanidir.`);
    }
}
console.log(metin4.split(""));

let monts = "Jan / Feb / Mar / Apr / May / Jun / Jul / Aug / Sep / Oct / Nov / Dec"

console.log(monts.split("/"));

let date = "14.10.2023"
let bugunTarihi = date.split(".")
console.log(bugunTarihi);

let liste = "Harry Trump; Fred Barny; Helen Rigby; Bill Abel; Chris Hand"

// Bir sayƒ± ile sƒ±nƒ±rlandƒ±rma da yapabilirim

console.log(liste.split(";", 3));

//! join ve reverse metodlarƒ± string metodu deƒüildir, Array metodlarƒ±dƒ±r. Ama split ile √ßok kullanƒ±bilir.

//? Join Metodu

let yeniListe = liste.split(",")
// Par√ßalandƒ±ktan sonra array oldu. Bu sayede Array metodlarƒ±ndan join ve reverse  kullanabilirim.
console.log(yeniListe);
// console.log(yeniListe.join())  default olarak arasƒ±na virg√ºl koyar.

console.log(yeniListe.join("-"));
console.log(littleLetSentences);

//? reverse
// reverse methodu ile bir diziyi tersine √ßevirebilmekteyiz. Dizi i√ßerisindeki ilk deƒüeri son, Son deƒüeri ise ilk sƒ±raya ≈üeklinde sƒ±ralayabilmekteyiz.

let selamla = "naz"
let tersten = selamla.split("").reverse().join("")

if (selamla === tersten) {
    console.log(`${selamla}kelimesi polindrom bir kelimedir.`);
}
else {
    console.log(`${selamla}kelimesi polindrom bir kelime deƒüildir.`);
}

let ataSoz = "Oku da adam ol"
console.log(ataSoz.split("").reverse().join(""));

//!                               STRING PAR√áALAMA-PA√áAYA ERƒ∞≈ûƒ∞M             */
//!                                Slice, Substring,Substr                   */

//! Slice Metodu
//? String i√ßinde bir b√∂l√ºm√º almak i√ßin kullanƒ±lƒ±r. (immmutable, kalƒ±cƒ±deƒüi≈üiklik olmaz)

// Slice(ba≈ülangƒ±√ß index numarasƒ±, biti≈ü index numarasƒ±(bu numara dahil deƒüildir))
// negatif deƒüerler ile tersten gelme yapƒ±labilir

console.log(ataSoz.slice(7));// Biti≈ü deƒüeri verilmezse sonuna kadar alƒ±r.

console.log(ataSoz.slice(7, 11));
console.log(ataSoz.slice(-11, -8));


//! substring(ba≈ülangƒ±√ß index numarasƒ±,biti≈ü index numarasƒ±) 
//Slicedan farkƒ± negatif sayƒ± kullanƒ±lmaz

let ozluSoz = "Tecr√ºbe tarak gibidir;ama hayat insana kel olduƒüu zaman verir."
console.log(ozluSoz.substring(8, 13));

//! substr(ba≈ülangƒ±√ß index numarasƒ±,ka√ß adet karakter alƒ±nacaƒüƒ±)
// substr √ºst√º √ßizili(deprecated) kullanƒ±mdan kaldƒ±rƒ±lmƒ±≈ü olmasƒ± deƒüil daha modern olan substirng ve slice kullanƒ±mƒ±nƒ±n √∂nerilmesidir.
console.log(ozluSoz.substr(27, 12));

/                           Stringde Deƒüi≈üiklik yapma                         */
/*                         replace()  ve replaceAll()                         */

// str.replace( ne deƒüi≈ütirecek, ne ile deƒüi≈ütirilecek) (immutable, kalƒ±cƒ± deƒüi≈üiklik yapzmaz)
console.log(ozluSoz.replace("kel", "sacli"));
console.log(ozluSoz);

//Verilen kullanƒ±cƒ± adƒ± deƒüi≈üken kurallarƒ±na uygun deƒüilse d√ºzenle

let variable = "kullanƒ±cƒ± adƒ± girisi" //kallanici adi

let yeni = variable.replace("", "_")
console.log(yeni);

let yeniDeg = yeni.replaceAll("ƒ±", "i")
console.log(yeniDeg);
let varieble1 = variable.replaceAll("", "-")
console.log(varieble1);

//!                       String i√ßinde arama i≈ülemleri                       */

// includes, indexOf, search ,match() metodlarƒ±nƒ± kullanabiliriz

//! includes()   ... yƒ± i√ßeriyor mu -> true yada false bir deƒüer d√∂nd√ºr√ºr.caseSensitive (k√º√ß√ºk b√ºy√ºk harfe duyarlƒ±) bir √∂zelliktir.

console.log(`√∂zl√ºs√∂zde tarak kelimesi ge√ßiyor mu? ${ozluSoz.includes("tarak")}`);

let url = "https://clarusway.com"

let msg = url.includes("https") ? `Bu site g√ºvenlidir` : "bu site g√ºvenli deƒüildir."
console.log(msg);

let email = "helenclarusway.com"
msg = email.includes("@") ? "Mail adresi ge√ßerlicir" : "Mail adresi ge√ßersizdir"
console.log(msg);

//! indexOf (aranacak metin, konum)
//? Bir karakter yada karakter grubumun ka√ßƒ±ncƒ± sƒ±rada olduƒüunu yani index numarasƒ±nƒ± verir. 
//?Eƒüer o karakter yoksa olmadƒ±ƒüƒ±nƒ± -1 deƒüeri vererek g√∂sterir. B√ºy√ºk k√º√ß√ºk harfe duyarlƒ±dƒ±r. Sadece ilk g√∂rd√ºƒü√ºn√ºn index numarasƒ±nƒ± verir

console.log(email.indexOf("edu"));

//! search() : bir string i√ßindeki aranan elemanda ilk bulduƒüunun index numarasƒ±nƒ± yazar. Bulamazsa -1 d√∂nderir.
// B√ºy√ºk k√º√ß√ºk harfe duyarlƒ±dƒ±r. 

let metin5 = "Clarusway IT bootcamp.Clarusway develop you IT field"

console.log(metin5.search("IT"));
console.log(metin5.search("it"));

// Regex ile √ß√∂z√ºm bulunabilir
// Regular Expression
//  Regex / / arasƒ±nda ifade edilir.

//?   /g => global : b√ºt√ºn c√ºmle i√ßin uygula
//?   /i => case sensitive √∂zelliƒüini kaldƒ±rK√º√ß√ºk b√ºy√ºk harfe bakmadan bul

console.log(metin5.search(/IT/gi));

let word = "ynig√ún"
console.log(word.search(/√º/gi))

console.log(word.replaceAll(/√º/gi, "i"));
console.log(word.search(/[aeƒ±io√∂u√º]/i));

/*                                   match()                                  */

// string i√ßinde aranan metin bulunur ve bir dizi d√∂nderir.

let text = "Merhaba bug√ºn ger√ßekten √ßok sƒ±cak bir Bug√ºn"

console.log(text.match(/bug√ºn/gi));

let say = text.match(/[a]/gi)
console.log(say.length);

/*                                    trim                                    */

let sentence1 = "       Clarusway          "
console.log(sentence1.trim());
console.log(sentence1.trimStart());
console.log(sentence1.trimEnd());

/*                                 startsWith,endsWith                        */

// startswith ve endswith true false deƒüer d√∂nderir

school = "Clarusway"
console.log(school.toUpperCase().startsWith("c"));
console.log(school.toUpperCase().endsWith("COM"));
